@import "./stylesheets/bootstrap/variables";



// .react-bs-container-body::-webkit-scrollbar{
// 	display: none;
// }
// .react-bs-container-body {
//     -ms-overflow-style: none;  // IE 10+
// }

  // Override bootstrap removal of top border from thead by default
  .table {
  > caption + thead,
  > colgroup + thead,
  > thead:first-child {
    > tr:first-child {
      > th,
      > td {
        border-top: 1px solid $table-border-color;
      }
    }
  }
  // Override 2 px bottom
    > thead > tr > th {
        background-color: $table-bg-header;
        border-bottom: 1px;
    }
  //Override table line heights
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        line-height: $table-line-height;
      }
    }
  }
  }




//React Bootsrap Table Stlyes

//colors


$cornflower_blue:  cornflowerblue;
$color_quill_gray_approx: lightgrey;
$black_50: rgba(0, 0, 0, 0.5);

//@extend-elements
//original selectors
//.react-bs-table .table table td, .react-bs-table .table table th
%extend_1 {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

//original selectors
//.react-bs-table .react-bs-container-header >table >thead >tr >th .number-filter-input, .react-bs-table .react-bs-container-header >table >thead >tr >th .date-filter-input
%extend_2 {
	margin-left: 5px;
	float: left;
	width: calc(100% - 67px - 5px);
}

.react-bs-table {
	margin: 5px 15px;
	font-size: 12px;
	table {
		margin-bottom: 0;
		table-layout: fixed;
	}
	
	.table-column-divider-left {
		border-left: 1px solid $table-border-color;
	}
	.table-column-divider-right {
		border-right: 1px solid $table-border-color;
	}
	th.table-active-sort.sort-column {
		background-color: $table-bg;
		box-shadow: inset 0px 2px 0px 0px $table-sort-teal;
	}
	.order{
		position: relative;
		top: 5px;
	}
	span.caret {
		color: $table-sort-teal;
		z-index: 1;
		position:absolute;
	}
	.table-bordered {
		border: 0;
		outline: none !important;
		> thead > tr {
			> th {
				border-bottom-width: 2px;
				border-top-width: 1px;
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
			> td {
				border-bottom-width: 2px;
				border-top-width: 1px;
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
			&:first-child {
				> th {
					border-top-width: 0;
				}
				> td {
					border-top-width: 0;
				}
			}
		}
		> tbody > tr {
			> td {
				outline: none !important;
				&.default-focus-cell {
					outline: 3px solid $cornflower_blue !important;
					outline-offset: -1px;
				}
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
			> th {
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
		}
		> tfoot > tr {
			> th {
				border-top-width: 2px;
				border-bottom-width: 0;
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
			> td {
				border-top-width: 2px;
				border-bottom-width: 0;
				&:first-child {
					border-left-width: 0;
				}
				&:last-child {
					border-right-width: 0;
				}
			}
			&:last-child {
				> th {
					border-bottom-width: 0;
				}
				> td {
					border-bottom-width: 0;
				}
			}
		}
	}
	.react-bs-container-header {
		.sort-column {
			cursor: pointer;
		}
		> table > thead > tr > th {
			vertical-align: middle;
			.filter {
				font-weight: normal;
			}
			.select-filter {
				option[value=''] {
					color: $color_quill_gray_approx;
					font-style: italic;
				}
				&.placeholder-selected {
					color: $color_quill_gray_approx;
					font-style: italic;
					option:not([value='']) {
						color: initial;
						font-style: initial;
					}
				}
			}
			.filter::-webkit-input-placeholder {
				color: $color_quill_gray_approx;
				font-style: italic;
			}
			.number-filter-input::-webkit-input-placeholder {
				color: $color_quill_gray_approx;
				font-style: italic;
			}
			.number-filter {
				display: flex;
			}
			.date-filter {
				display: flex;
			}
			.number-filter-input {
				@extend %extend_2;
			}
			.date-filter-input {
				@extend %extend_2;
			}
			.number-filter-comparator {
				width: 67px;
				float: left;
			}
			.date-filter-comparator {
				width: 67px;
				float: left;
			}
		}
	}
	.table table {
		td {
			@extend %extend_1;
		}
		th {
			@extend %extend_1;
		}
	}
}
.react-bs-table-pagination {
	margin: 10px;
}
.react-bs-table-tool-bar {
	margin: 10px 10px 0 10px;
}
.react-bs-container-header {
	overflow: hidden;
	width: 100%;
}
.react-bs-container-body {
	overflow: auto;
	width: 100%;
	position:relative;
}
.react-bootstrap-table-page-btns-ul {
	float: right;
	margin-top: 0;
}
.react-bs-container {
	.textarea-save-btn {
		position: absolute;
		z-index: 100;
		right: 0;
		top: -21px;
	}
	.form-control.editor {
	}
}
.react-bs-table-no-data {
	text-align: center;
}
.ReactModal__Overlay {
	//Instead of the line below you could use @include perspective($p)
	perspective: 600;
	opacity: 0;
	overflow-x: hidden;
	overflow-y: auto;
	background-color: $black_50;
	z-index: 101;
}
.ReactModal__Overlay--after-open {
	opacity: 1;
	//Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
	transition: opacity 150ms ease-out;
}
.ReactModal__Content {
	//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
	transform: scale(0.5) rotateX(-30deg);
	&.modal-dialog {
		border: none;
		background-color: transparent;
	}
}
.ReactModal__Content--after-open {
	//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
	transform: scale(1) rotateX(0deg);
	//Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
	transition: all 150ms ease-in;
}
.ReactModal__Overlay--before-close {
	opacity: 0;
}
.ReactModal__Content--before-close {
	//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
	transform: scale(0.5) rotateX(30deg);
	//Instead of the line below you could use @include transition($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10)
	transition: all 150ms ease-in;
}
.animated {
	animation-fill-mode: both;
	&.bounceIn {
		animation-duration: .75s;
	}
	&.bounceOut {
		animation-duration: .75s;
	}
	&.shake {
		animation-duration: .3s;
	}
}
@keyframes shake {
	from {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(0, 0, 0);
	}
	to {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(0, 0, 0);
	}
	10% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(-10px, 0, 0);
	}
	50% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(-10px, 0, 0);
	}
	90% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(-10px, 0, 0);
	}
	30% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(10px, 0, 0);
	}
	70% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: translate3d(10px, 0, 0);
	}
}
.shake {
	animation-name: shake;
}
@keyframes bounceIn {
	from {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
	}
	20% {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(1.1, 1.1, 1.1);
	}
	40% {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(.9, .9, .9);
	}
	60% {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
		opacity: 1;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(1.03, 1.03, 1.03);
	}
	80% {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(.97, .97, .97);
	}
	to {
		animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
		opacity: 1;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(1, 1, 1);
	}
	0% {
		opacity: 0;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(.3, .3, .3);
	}
}
.bounceIn {
	animation-name: bounceIn;
}
@keyframes bounceOut {
	20% {
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(.9, .9, .9);
	}
	50% {
		opacity: 1;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(1.1, 1.1, 1.1);
	}
	55% {
		opacity: 1;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(1.1, 1.1, 1.1);
	}
	to {
		opacity: 0;
		//Instead of the line below you could use @include transform($scale, $rotate, $transx, $transy, $skewx, $skewy, $originx, $originy)
		transform: scale3d(.3, .3, .3);
	}
}
.bounceOut {
	animation-name: bounceOut;
}
.react-bs-table-container .react-bs-table-search-form {
	margin-bottom: 0;
}
td.react-bs-table-expand-cell {
	cursor: pointer;
}